# i dropped pararell processing since creating interval-tree for each process would be bad and i preffered to keep the 
# interval-trees beacuse this approach is even better at the real world because in real world there will be not
# that much overlapping asset-vulnerability pairs like in my files that i generated just for performance tests

# NUMBER OF CHUNKS VULN FILE WILL BE SPLIT INTO
CHUNKS_NUM=4

# MAX NUMBER OF THREADS THAT PSICINA WILL SPAWN
PISCINA_THREADS=4


# FILES WITH 10000 JSON RECORDS and each of the asset

# PLATFORM_PATH="./performancetests/Platforms.json"
# ASSET_PATH="./performancetests/Assets.json"
# VULN_PATH="./performancetests/Vulnerabilities.json"


# BASIC FILES FOR EXAMPLE PROGRAM RUN

# PLATFORM_PATH="./basefiles/Platforms.json"
# ASSET_PATH="./basefiles/Assets.json"
# VULN_PATH="./basefiles/Vulnerabilities.json"


# TESTS UNCOMMENT THIS IF YOU WANT TO RUN TESTS AND REMEBER ABOUT PLACING FILES IN THE filestests

# PLATFORM_PATH="./filestests/Platforms.json"
# ASSET_PATH="./filestests/Assets.json"
# VULN_PATH="./filestests/Vulnerabilities.json"
